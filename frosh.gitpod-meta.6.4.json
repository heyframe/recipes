{
    "manifests": {
        "frosh/gitpod-meta": {
            "manifest": {
                "copy-from-recipe": {
                    "root/": ""
                },
                "post-install-output": [
                    "  * <fg=blue>Run</> your application on Gitpod:",
                    "    1. Commit the <comment>.gitpod.yml</comment> and <comment>.gitpod.Dockerfile</comment>",
                    "    2. Open your repository inside Gitpod",
                    "    3. To improve the performance of start-up, register the repository at Gitpod and enable prebuilt",
                    "",
                    "  * <fg=blue>Read</> the documentation at <comment>https://www.gitpod.io/docs/introduction/getting-started</>"
                ]
            },
            "files": {
                "root/.gitpod.Dockerfile": {
                    "contents": [
                        "FROM gitpod/workspace-base:latest",
                        "",
                        "COPY --from=composer:2 /usr/bin/composer /usr/bin/composer",
                        "",
                        "RUN sudo add-apt-repository ppa:ondrej/php -y && \\",
                        "    curl -fsSL https://deb.nodesource.com/setup_16.x | sudo bash - && \\",
                        "    curl -1sLf 'https://dl.cloudsmith.io/public/symfony/stable/setup.deb.sh' | sudo -E bash && \\",
                        "    curl -1sLf 'https://dl.cloudsmith.io/public/friendsofheyframe/stable/setup.deb.sh'  | sudo -E bash && \\",
                        "    sudo apt-get install -y \\",
                        "    php8.1-fpm php8.1-mysql php8.1-curl php8.1-gd php8.1-xml php8.1-zip php8.1-opcache php8.1-mbstring php8.1-intl php8.1-cli php8.1-redis \\",
                        "    rsync \\",
                        "    symfony-cli \\",
                        "    heyframe-cli \\",
                        "    mysql-client-8.0 \\",
                        "    nodejs && \\",
                        "    sudo apt-get upgrade -y && \\",
                        "    echo \"memory_limit=512M\" > php.ini && \\",
                        "    echo \"zend.assertions=-1\" >> php.ini && \\",
                        "    echo \"opcache.interned_strings_buffer=20\" >> php.ini && \\",
                        "    echo \"zend.detect_unicode=0\" >> php.ini && \\",
                        "    echo \"realpath_cache_ttl=3600\" >> php.ini && \\",
                        "    sudo cp php.ini /etc/php/8.1/cli/conf.d/99-overrides.ini && \\",
                        "    sudo cp php.ini /etc/php/8.1/fpm/conf.d/99-overrides.ini && \\",
                        "    rm php.ini && \\",
                        "    echo \"[client]\" > ~/.my.cnf && \\",
                        "    echo \"host=127.0.0.1\" >> ~/.my.cnf && \\",
                        "    echo \"user=root\" >> ~/.my.cnf && \\",
                        "    echo \"password=root\" >> ~/.my.cnf",
                        ""
                    ],
                    "executable": false
                },
                "root/.gitpod.yml": {
                    "contents": [
                        "image:",
                        "    file: .gitpod.Dockerfile",
                        "tasks:",
                        "    - name: HeyFrame",
                        "      before: |",
                        "        echo 'alias admin-watch=\"LOAD_DOTENV=0 APP_URL=http://localhost:8000 ./bin/watch-administration.sh\"' >> ~/.bashrc",
                        "      init: |",
                        "        # Run MySQL",
                        "        docker run --restart always -d --name=mysql -v /workspace/mysql:/var/lib/mysql -p 127.0.0.1:3306:3306 -e MYSQL_ROOT_PASSWORD=root mysql:8",
                        "        docker run --restart always -d --name=adminer --link mysql:mysql -p 5000:8080 -e ADMINER_DESIGN=pepa-linha -e ADMINER_DEFAULT_SERVER=mysql -e ADMINER_PLUGINS=\"tables-filter table-structure json-column version-noverify\" ghcr.io/shyim/heyframe-docker/adminer",
                        "",
                        "        composer config --global github-oauth.github.com $(printf '%s\\n' host=github.com | gp credential-helper get | sort | head -2 | tail -1 | sed 's;password=;;')",
                        "        composer install",
                        "",
                        "        composer req --dev profiler fakerphp/faker mbezhanov/faker-provider-collection maltyxx/images-generator",
                        "",
                        "        # Configure HeyFrame",
                        "        sed -i -e 's;DATABASE_URL=.*$;DATABASE_URL=mysql://root:root@127.0.0.1:3306/heyframe;' .env",
                        "        sed -i -e \"s;APP_URL=.*$;APP_URL=$(gp url 8000);\" .env",
                        "        echo \"TRUSTED_PROXIES=192.168.0.0/16\" >> .env",
                        "",
                        "        ./bin/console system:install --basic-setup --create-database --drop-database",
                        "",
                        "        ./bin/console system:config:set core.frw.completedAt '2019-10-07T10:46:23+00:00'",
                        "",
                        "        ./bin/console framework:demodata --products 300",
                        "        ./bin/console dal:refresh:index",
                        "",
                        "        rm -rf var/cache/*",
                        "",
                        "        # Set by default to dev",
                        "        sed -i -e \"s;APP_ENV=.*$;APP_ENV=dev;\" .env",
                        "      command: |",
                        "        # Gitpod registers the ports on first docker command",
                        "        docker ps",
                        "",
                        "        # Wait for port open",
                        "        gp ports await 3306",
                        "",
                        "        # Wait until MySQL is reachable",
                        "        until mysqladmin ping; do",
                        "            sleep 1",
                        "        done",
                        "",
                        "        # Update domain url",
                        "        ./bin/console sales-channel:update:domain $(gp url 8000 | awk -F[/:] '{print $4}')",
                        "",
                        "        # Start Webserver",
                        "        symfony server:start --port 8000 -d",
                        "    - name: Getting Started",
                        "      command: |",
                        "        echo 'Hey!. Your environment is starting soon. You can see the progress in the HeyFrame Terminal'",
                        "        echo 'If you want to run the Admin Watch, just use the Terminal alias: admin-watch'",
                        "        echo 'Happy Coding!'",
                        "        echo \"Shop URL: $(gp url 8000)\"",
                        "        echo \"Admin-Watcher URL: $(gp url 8080)\"",
                        "        echo \"Adminer URL: $(gp url 5000)\"",
                        "ports:",
                        "    - port: 8000",
                        "      visibility: private",
                        "      description: HeyFrame",
                        "      onOpen: open-browser",
                        "    - port: 5000",
                        "      visibility: private",
                        "      description: Adminer",
                        "      onOpen: notify",
                        "    - name: Admin-Watcher",
                        "      port: 8080",
                        "      onOpen: notify",
                        "      description: \"Use Forward Proxy to localhost to access this service\"",
                        "jetbrains:",
                        "    phpstorm:",
                        "        plugins:",
                        "            - de.espend.idea.php.annotation",
                        "            - fr.adrienbrault.idea.symfony2plugin",
                        "            - de.shyim.heyframe6",
                        "            - de.shyim.ideaphpstantoolbox",
                        "        vmoptions: \"-Xmx4g\"",
                        "        prebuilds:",
                        "            version: stable",
                        "vscode:",
                        "    extensions:",
                        "        - bmewburn.vscode-intelephense-client",
                        "        - redhat.vscode-yaml",
                        "github:",
                        "    prebuilds:",
                        "        master: true",
                        "        branches: true",
                        "        pullRequests: true",
                        "        pullRequestsFromForks: true",
                        "        addCheck: false",
                        "        addComment: false",
                        "        addBadge: true",
                        ""
                    ],
                    "executable": false
                }
            },
            "ref": "1e69b62b297ae2bfa4ee5b38c24f595ecd3aa66f"
        }
    }
}
